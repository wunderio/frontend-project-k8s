{{- range $serviceName, $service := .Values.services }}
{{ if $service.cron }}
{{- range $jobName, $job := $service.cron }}

apiVersion: {{ include "frontend.cron.api-version" $ | trim }}
kind: CronJob
metadata:
  name: {{ $.Release.Name }}-{{ $jobName }}
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
spec:
  schedule: {{ $job.schedule | replace "~" (randNumeric 1) | quote }}
  concurrencyPolicy: {{ default "Forbid" $job.concurrencyPolicy }}
  startingDeadlineSeconds: 3600
  successfulJobsHistoryLimit: 0
  suspend: false
  jobTemplate:
    spec:
      parallelism: {{ default 1 $job.parallelism }}
      template:
        metadata:
          labels:
            {{- include "frontend.release_labels" $ | nindent 12 }}
            cronjob: "true"
        spec:
          enableServiceLinks: false
          containers:
          - name: {{ $jobName }}-cron
            image: {{ $service.image | quote }}
            volumeMounts:
              {{ if $service.mounts }}
              {{- range $index, $mountName := $service.mounts -}}
              {{ $mount := (index $.Values.mounts $mountName) }}
              {{- if eq $mount.enabled true }}
              - name: frontend-{{ $mountName }}
                mountPath: {{ $mount.mountPath }}
              {{- end }}
              {{- end }}
              {{- end }}
            env:
            {{- include "services.env" (dict "Values" $.Values "Release" $.Release "service" $service) | nindent 12 }}
            {{- range $key, $val := $service.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            command: ["/bin/sh", "-c"]
            args:
              - |
                 set -ex
                 echo "starting cron run"
                 {{ $job.command | nindent 18 }}
                 echo "cron run completed"
            resources:
              {{- if $job.resources }}
              {{- if $service.resources }}
              {{ merge $job.resources (merge $service.resources $.Values.serviceDefaults.resources) | toYaml | nindent 14 }}
              {{- else }}
              {{ merge $job.resources $.Values.serviceDefaults.resources | toYaml | nindent 14 }}
              {{- end }}
              {{- else if $service.resources }}
              {{ merge $service.resources $.Values.serviceDefaults.resources | toYaml | nindent 14 }}
              {{- else }}
              {{ $.Values.serviceDefaults.resources | toYaml | nindent 14 }}
              {{- end }}
          volumes:
            {{ if $service.mounts }}
            {{- range $index, $mountName := $service.mounts -}}
            {{ $mount := (index $.Values.mounts $mountName) }}
            {{- if eq $mount.enabled true }}
            - name: frontend-{{ $mountName }}
              persistentVolumeClaim:
                claimName: {{ $.Release.Name }}-{{ $mountName }}
            {{- end }}
            {{- end }}
            {{- end }}
          restartPolicy: OnFailure

          {{ if or $job.nodeSelector $service.nodeSelector -}}
          nodeSelector:
            {{ if $job.nodeSelector }}
            {{- $job.nodeSelector | toYaml | nindent 12 }}
            {{ else }}
            {{- $service.nodeSelector | toYaml | nindent 12 }}
            {{- end }}
          tolerations:
            {{ if $job.nodeSelector }}
            {{- include "frontend.tolerations" $job.nodeSelector | nindent 12 }}
            {{ else }}
            {{- include "frontend.tolerations" $service.nodeSelector | nindent 12 }}
            {{- end }}
          {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
